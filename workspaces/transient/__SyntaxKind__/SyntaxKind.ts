import ts from "typescript"
console.log(`${ts.SyntaxKind.Unknown}: Unknown`)
console.log(`${ts.SyntaxKind.EndOfFileToken}: EndOfFileToken`)
console.log(`${ts.SyntaxKind.SingleLineCommentTrivia}: SingleLineCommentTrivia`)
console.log(`${ts.SyntaxKind.MultiLineCommentTrivia}: MultiLineCommentTrivia`)
console.log(`${ts.SyntaxKind.NewLineTrivia}: NewLineTrivia`)
console.log(`${ts.SyntaxKind.WhitespaceTrivia}: WhitespaceTrivia`)
console.log(`${ts.SyntaxKind.ShebangTrivia}: ShebangTrivia`)
console.log(`${ts.SyntaxKind.ConflictMarkerTrivia}: ConflictMarkerTrivia`)
console.log(`${ts.SyntaxKind.NumericLiteral}: NumericLiteral`)
console.log(`${ts.SyntaxKind.BigIntLiteral}: BigIntLiteral`)
console.log(`${ts.SyntaxKind.StringLiteral}: StringLiteral`)
console.log(`${ts.SyntaxKind.JsxText}: JsxText`)
console.log(`${ts.SyntaxKind.JsxTextAllWhiteSpaces}: JsxTextAllWhiteSpaces`)
console.log(`${ts.SyntaxKind.RegularExpressionLiteral}: RegularExpressionLiteral`)
console.log(`${ts.SyntaxKind.NoSubstitutionTemplateLiteral}: NoSubstitutionTemplateLiteral`)
console.log(`${ts.SyntaxKind.TemplateHead}: TemplateHead`)
console.log(`${ts.SyntaxKind.TemplateMiddle}: TemplateMiddle`)
console.log(`${ts.SyntaxKind.TemplateTail}: TemplateTail`)
console.log(`${ts.SyntaxKind.OpenBraceToken}: OpenBraceToken`)
console.log(`${ts.SyntaxKind.CloseBraceToken}: CloseBraceToken`)
console.log(`${ts.SyntaxKind.OpenParenToken}: OpenParenToken`)
console.log(`${ts.SyntaxKind.CloseParenToken}: CloseParenToken`)
console.log(`${ts.SyntaxKind.OpenBracketToken}: OpenBracketToken`)
console.log(`${ts.SyntaxKind.CloseBracketToken}: CloseBracketToken`)
console.log(`${ts.SyntaxKind.DotToken}: DotToken`)
console.log(`${ts.SyntaxKind.DotDotDotToken}: DotDotDotToken`)
console.log(`${ts.SyntaxKind.SemicolonToken}: SemicolonToken`)
console.log(`${ts.SyntaxKind.CommaToken}: CommaToken`)
console.log(`${ts.SyntaxKind.QuestionDotToken}: QuestionDotToken`)
console.log(`${ts.SyntaxKind.LessThanToken}: LessThanToken`)
console.log(`${ts.SyntaxKind.LessThanSlashToken}: LessThanSlashToken`)
console.log(`${ts.SyntaxKind.GreaterThanToken}: GreaterThanToken`)
console.log(`${ts.SyntaxKind.LessThanEqualsToken}: LessThanEqualsToken`)
console.log(`${ts.SyntaxKind.GreaterThanEqualsToken}: GreaterThanEqualsToken`)
console.log(`${ts.SyntaxKind.EqualsEqualsToken}: EqualsEqualsToken`)
console.log(`${ts.SyntaxKind.ExclamationEqualsToken}: ExclamationEqualsToken`)
console.log(`${ts.SyntaxKind.EqualsEqualsEqualsToken}: EqualsEqualsEqualsToken`)
console.log(`${ts.SyntaxKind.ExclamationEqualsEqualsToken}: ExclamationEqualsEqualsToken`)
console.log(`${ts.SyntaxKind.EqualsGreaterThanToken}: EqualsGreaterThanToken`)
console.log(`${ts.SyntaxKind.PlusToken}: PlusToken`)
console.log(`${ts.SyntaxKind.MinusToken}: MinusToken`)
console.log(`${ts.SyntaxKind.AsteriskToken}: AsteriskToken`)
console.log(`${ts.SyntaxKind.AsteriskAsteriskToken}: AsteriskAsteriskToken`)
console.log(`${ts.SyntaxKind.SlashToken}: SlashToken`)
console.log(`${ts.SyntaxKind.PercentToken}: PercentToken`)
console.log(`${ts.SyntaxKind.PlusPlusToken}: PlusPlusToken`)
console.log(`${ts.SyntaxKind.MinusMinusToken}: MinusMinusToken`)
console.log(`${ts.SyntaxKind.LessThanLessThanToken}: LessThanLessThanToken`)
console.log(`${ts.SyntaxKind.GreaterThanGreaterThanToken}: GreaterThanGreaterThanToken`)
console.log(`${ts.SyntaxKind.GreaterThanGreaterThanGreaterThanToken}: GreaterThanGreaterThanGreaterThanToken`)
console.log(`${ts.SyntaxKind.AmpersandToken}: AmpersandToken`)
console.log(`${ts.SyntaxKind.BarToken}: BarToken`)
console.log(`${ts.SyntaxKind.CaretToken}: CaretToken`)
console.log(`${ts.SyntaxKind.ExclamationToken}: ExclamationToken`)
console.log(`${ts.SyntaxKind.TildeToken}: TildeToken`)
console.log(`${ts.SyntaxKind.AmpersandAmpersandToken}: AmpersandAmpersandToken`)
console.log(`${ts.SyntaxKind.BarBarToken}: BarBarToken`)
console.log(`${ts.SyntaxKind.QuestionToken}: QuestionToken`)
console.log(`${ts.SyntaxKind.ColonToken}: ColonToken`)
console.log(`${ts.SyntaxKind.AtToken}: AtToken`)
console.log(`${ts.SyntaxKind.QuestionQuestionToken}: QuestionQuestionToken`)
console.log(`${ts.SyntaxKind.BacktickToken}: BacktickToken`)
console.log(`${ts.SyntaxKind.HashToken}: HashToken`)
console.log(`${ts.SyntaxKind.EqualsToken}: EqualsToken`)
console.log(`${ts.SyntaxKind.PlusEqualsToken}: PlusEqualsToken`)
console.log(`${ts.SyntaxKind.MinusEqualsToken}: MinusEqualsToken`)
console.log(`${ts.SyntaxKind.AsteriskEqualsToken}: AsteriskEqualsToken`)
console.log(`${ts.SyntaxKind.AsteriskAsteriskEqualsToken}: AsteriskAsteriskEqualsToken`)
console.log(`${ts.SyntaxKind.SlashEqualsToken}: SlashEqualsToken`)
console.log(`${ts.SyntaxKind.PercentEqualsToken}: PercentEqualsToken`)
console.log(`${ts.SyntaxKind.LessThanLessThanEqualsToken}: LessThanLessThanEqualsToken`)
console.log(`${ts.SyntaxKind.GreaterThanGreaterThanEqualsToken}: GreaterThanGreaterThanEqualsToken`)
console.log(`${ts.SyntaxKind.GreaterThanGreaterThanGreaterThanEqualsToken}: GreaterThanGreaterThanGreaterThanEqualsToken`)
console.log(`${ts.SyntaxKind.AmpersandEqualsToken}: AmpersandEqualsToken`)
console.log(`${ts.SyntaxKind.BarEqualsToken}: BarEqualsToken`)
console.log(`${ts.SyntaxKind.BarBarEqualsToken}: BarBarEqualsToken`)
console.log(`${ts.SyntaxKind.AmpersandAmpersandEqualsToken}: AmpersandAmpersandEqualsToken`)
console.log(`${ts.SyntaxKind.QuestionQuestionEqualsToken}: QuestionQuestionEqualsToken`)
console.log(`${ts.SyntaxKind.CaretEqualsToken}: CaretEqualsToken`)
console.log(`${ts.SyntaxKind.Identifier}: Identifier`)
console.log(`${ts.SyntaxKind.PrivateIdentifier}: PrivateIdentifier`)
console.log(`${ts.SyntaxKind.BreakKeyword}: BreakKeyword`)
console.log(`${ts.SyntaxKind.CaseKeyword}: CaseKeyword`)
console.log(`${ts.SyntaxKind.CatchKeyword}: CatchKeyword`)
console.log(`${ts.SyntaxKind.ClassKeyword}: ClassKeyword`)
console.log(`${ts.SyntaxKind.ConstKeyword}: ConstKeyword`)
console.log(`${ts.SyntaxKind.ContinueKeyword}: ContinueKeyword`)
console.log(`${ts.SyntaxKind.DebuggerKeyword}: DebuggerKeyword`)
console.log(`${ts.SyntaxKind.DefaultKeyword}: DefaultKeyword`)
console.log(`${ts.SyntaxKind.DeleteKeyword}: DeleteKeyword`)
console.log(`${ts.SyntaxKind.DoKeyword}: DoKeyword`)
console.log(`${ts.SyntaxKind.ElseKeyword}: ElseKeyword`)
console.log(`${ts.SyntaxKind.EnumKeyword}: EnumKeyword`)
console.log(`${ts.SyntaxKind.ExportKeyword}: ExportKeyword`)
console.log(`${ts.SyntaxKind.ExtendsKeyword}: ExtendsKeyword`)
console.log(`${ts.SyntaxKind.FalseKeyword}: FalseKeyword`)
console.log(`${ts.SyntaxKind.FinallyKeyword}: FinallyKeyword`)
console.log(`${ts.SyntaxKind.ForKeyword}: ForKeyword`)
console.log(`${ts.SyntaxKind.FunctionKeyword}: FunctionKeyword`)
console.log(`${ts.SyntaxKind.IfKeyword}: IfKeyword`)
console.log(`${ts.SyntaxKind.ImportKeyword}: ImportKeyword`)
console.log(`${ts.SyntaxKind.InKeyword}: InKeyword`)
console.log(`${ts.SyntaxKind.InstanceOfKeyword}: InstanceOfKeyword`)
console.log(`${ts.SyntaxKind.NewKeyword}: NewKeyword`)
console.log(`${ts.SyntaxKind.NullKeyword}: NullKeyword`)
console.log(`${ts.SyntaxKind.ReturnKeyword}: ReturnKeyword`)
console.log(`${ts.SyntaxKind.SuperKeyword}: SuperKeyword`)
console.log(`${ts.SyntaxKind.SwitchKeyword}: SwitchKeyword`)
console.log(`${ts.SyntaxKind.ThisKeyword}: ThisKeyword`)
console.log(`${ts.SyntaxKind.ThrowKeyword}: ThrowKeyword`)
console.log(`${ts.SyntaxKind.TrueKeyword}: TrueKeyword`)
console.log(`${ts.SyntaxKind.TryKeyword}: TryKeyword`)
console.log(`${ts.SyntaxKind.TypeOfKeyword}: TypeOfKeyword`)
console.log(`${ts.SyntaxKind.VarKeyword}: VarKeyword`)
console.log(`${ts.SyntaxKind.VoidKeyword}: VoidKeyword`)
console.log(`${ts.SyntaxKind.WhileKeyword}: WhileKeyword`)
console.log(`${ts.SyntaxKind.WithKeyword}: WithKeyword`)
console.log(`${ts.SyntaxKind.ImplementsKeyword}: ImplementsKeyword`)
console.log(`${ts.SyntaxKind.InterfaceKeyword}: InterfaceKeyword`)
console.log(`${ts.SyntaxKind.LetKeyword}: LetKeyword`)
console.log(`${ts.SyntaxKind.PackageKeyword}: PackageKeyword`)
console.log(`${ts.SyntaxKind.PrivateKeyword}: PrivateKeyword`)
console.log(`${ts.SyntaxKind.ProtectedKeyword}: ProtectedKeyword`)
console.log(`${ts.SyntaxKind.PublicKeyword}: PublicKeyword`)
console.log(`${ts.SyntaxKind.StaticKeyword}: StaticKeyword`)
console.log(`${ts.SyntaxKind.YieldKeyword}: YieldKeyword`)
console.log(`${ts.SyntaxKind.AbstractKeyword}: AbstractKeyword`)
console.log(`${ts.SyntaxKind.AsKeyword}: AsKeyword`)
console.log(`${ts.SyntaxKind.AssertsKeyword}: AssertsKeyword`)
console.log(`${ts.SyntaxKind.AssertKeyword}: AssertKeyword`)
console.log(`${ts.SyntaxKind.AnyKeyword}: AnyKeyword`)
console.log(`${ts.SyntaxKind.AsyncKeyword}: AsyncKeyword`)
console.log(`${ts.SyntaxKind.AwaitKeyword}: AwaitKeyword`)
console.log(`${ts.SyntaxKind.BooleanKeyword}: BooleanKeyword`)
console.log(`${ts.SyntaxKind.ConstructorKeyword}: ConstructorKeyword`)
console.log(`${ts.SyntaxKind.DeclareKeyword}: DeclareKeyword`)
console.log(`${ts.SyntaxKind.GetKeyword}: GetKeyword`)
console.log(`${ts.SyntaxKind.InferKeyword}: InferKeyword`)
console.log(`${ts.SyntaxKind.IntrinsicKeyword}: IntrinsicKeyword`)
console.log(`${ts.SyntaxKind.IsKeyword}: IsKeyword`)
console.log(`${ts.SyntaxKind.KeyOfKeyword}: KeyOfKeyword`)
console.log(`${ts.SyntaxKind.ModuleKeyword}: ModuleKeyword`)
console.log(`${ts.SyntaxKind.NamespaceKeyword}: NamespaceKeyword`)
console.log(`${ts.SyntaxKind.NeverKeyword}: NeverKeyword`)
console.log(`${ts.SyntaxKind.ReadonlyKeyword}: ReadonlyKeyword`)
console.log(`${ts.SyntaxKind.RequireKeyword}: RequireKeyword`)
console.log(`${ts.SyntaxKind.NumberKeyword}: NumberKeyword`)
console.log(`${ts.SyntaxKind.ObjectKeyword}: ObjectKeyword`)
console.log(`${ts.SyntaxKind.SetKeyword}: SetKeyword`)
console.log(`${ts.SyntaxKind.StringKeyword}: StringKeyword`)
console.log(`${ts.SyntaxKind.SymbolKeyword}: SymbolKeyword`)
console.log(`${ts.SyntaxKind.TypeKeyword}: TypeKeyword`)
console.log(`${ts.SyntaxKind.UndefinedKeyword}: UndefinedKeyword`)
console.log(`${ts.SyntaxKind.UniqueKeyword}: UniqueKeyword`)
console.log(`${ts.SyntaxKind.UnknownKeyword}: UnknownKeyword`)
console.log(`${ts.SyntaxKind.FromKeyword}: FromKeyword`)
console.log(`${ts.SyntaxKind.GlobalKeyword}: GlobalKeyword`)
console.log(`${ts.SyntaxKind.BigIntKeyword}: BigIntKeyword`)
console.log(`${ts.SyntaxKind.OverrideKeyword}: OverrideKeyword`)
console.log(`${ts.SyntaxKind.OfKeyword}: OfKeyword`)
console.log(`${ts.SyntaxKind.QualifiedName}: QualifiedName`)
console.log(`${ts.SyntaxKind.ComputedPropertyName}: ComputedPropertyName`)
console.log(`${ts.SyntaxKind.TypeParameter}: TypeParameter`)
console.log(`${ts.SyntaxKind.Parameter}: Parameter`)
console.log(`${ts.SyntaxKind.Decorator}: Decorator`)
console.log(`${ts.SyntaxKind.PropertySignature}: PropertySignature`)
console.log(`${ts.SyntaxKind.PropertyDeclaration}: PropertyDeclaration`)
console.log(`${ts.SyntaxKind.MethodSignature}: MethodSignature`)
console.log(`${ts.SyntaxKind.MethodDeclaration}: MethodDeclaration`)
console.log(`${ts.SyntaxKind.ClassStaticBlockDeclaration}: ClassStaticBlockDeclaration`)
console.log(`${ts.SyntaxKind.Constructor}: Constructor`)
console.log(`${ts.SyntaxKind.GetAccessor}: GetAccessor`)
console.log(`${ts.SyntaxKind.SetAccessor}: SetAccessor`)
console.log(`${ts.SyntaxKind.CallSignature}: CallSignature`)
console.log(`${ts.SyntaxKind.ConstructSignature}: ConstructSignature`)
console.log(`${ts.SyntaxKind.IndexSignature}: IndexSignature`)
console.log(`${ts.SyntaxKind.TypePredicate}: TypePredicate`)
console.log(`${ts.SyntaxKind.TypeReference}: TypeReference`)
console.log(`${ts.SyntaxKind.FunctionType}: FunctionType`)
console.log(`${ts.SyntaxKind.ConstructorType}: ConstructorType`)
console.log(`${ts.SyntaxKind.TypeQuery}: TypeQuery`)
console.log(`${ts.SyntaxKind.TypeLiteral}: TypeLiteral`)
console.log(`${ts.SyntaxKind.ArrayType}: ArrayType`)
console.log(`${ts.SyntaxKind.TupleType}: TupleType`)
console.log(`${ts.SyntaxKind.OptionalType}: OptionalType`)
console.log(`${ts.SyntaxKind.RestType}: RestType`)
console.log(`${ts.SyntaxKind.UnionType}: UnionType`)
console.log(`${ts.SyntaxKind.IntersectionType}: IntersectionType`)
console.log(`${ts.SyntaxKind.ConditionalType}: ConditionalType`)
console.log(`${ts.SyntaxKind.InferType}: InferType`)
console.log(`${ts.SyntaxKind.ParenthesizedType}: ParenthesizedType`)
console.log(`${ts.SyntaxKind.ThisType}: ThisType`)
console.log(`${ts.SyntaxKind.TypeOperator}: TypeOperator`)
console.log(`${ts.SyntaxKind.IndexedAccessType}: IndexedAccessType`)
console.log(`${ts.SyntaxKind.MappedType}: MappedType`)
console.log(`${ts.SyntaxKind.LiteralType}: LiteralType`)
console.log(`${ts.SyntaxKind.NamedTupleMember}: NamedTupleMember`)
console.log(`${ts.SyntaxKind.TemplateLiteralType}: TemplateLiteralType`)
console.log(`${ts.SyntaxKind.TemplateLiteralTypeSpan}: TemplateLiteralTypeSpan`)
console.log(`${ts.SyntaxKind.ImportType}: ImportType`)
console.log(`${ts.SyntaxKind.ObjectBindingPattern}: ObjectBindingPattern`)
console.log(`${ts.SyntaxKind.ArrayBindingPattern}: ArrayBindingPattern`)
console.log(`${ts.SyntaxKind.BindingElement}: BindingElement`)
console.log(`${ts.SyntaxKind.ArrayLiteralExpression}: ArrayLiteralExpression`)
console.log(`${ts.SyntaxKind.ObjectLiteralExpression}: ObjectLiteralExpression`)
console.log(`${ts.SyntaxKind.PropertyAccessExpression}: PropertyAccessExpression`)
console.log(`${ts.SyntaxKind.ElementAccessExpression}: ElementAccessExpression`)
console.log(`${ts.SyntaxKind.CallExpression}: CallExpression`)
console.log(`${ts.SyntaxKind.NewExpression}: NewExpression`)
console.log(`${ts.SyntaxKind.TaggedTemplateExpression}: TaggedTemplateExpression`)
console.log(`${ts.SyntaxKind.TypeAssertionExpression}: TypeAssertionExpression`)
console.log(`${ts.SyntaxKind.ParenthesizedExpression}: ParenthesizedExpression`)
console.log(`${ts.SyntaxKind.FunctionExpression}: FunctionExpression`)
console.log(`${ts.SyntaxKind.ArrowFunction}: ArrowFunction`)
console.log(`${ts.SyntaxKind.DeleteExpression}: DeleteExpression`)
console.log(`${ts.SyntaxKind.TypeOfExpression}: TypeOfExpression`)
console.log(`${ts.SyntaxKind.VoidExpression}: VoidExpression`)
console.log(`${ts.SyntaxKind.AwaitExpression}: AwaitExpression`)
console.log(`${ts.SyntaxKind.PrefixUnaryExpression}: PrefixUnaryExpression`)
console.log(`${ts.SyntaxKind.PostfixUnaryExpression}: PostfixUnaryExpression`)
console.log(`${ts.SyntaxKind.BinaryExpression}: BinaryExpression`)
console.log(`${ts.SyntaxKind.ConditionalExpression}: ConditionalExpression`)
console.log(`${ts.SyntaxKind.TemplateExpression}: TemplateExpression`)
console.log(`${ts.SyntaxKind.YieldExpression}: YieldExpression`)
console.log(`${ts.SyntaxKind.SpreadElement}: SpreadElement`)
console.log(`${ts.SyntaxKind.ClassExpression}: ClassExpression`)
console.log(`${ts.SyntaxKind.OmittedExpression}: OmittedExpression`)
console.log(`${ts.SyntaxKind.ExpressionWithTypeArguments}: ExpressionWithTypeArguments`)
console.log(`${ts.SyntaxKind.AsExpression}: AsExpression`)
console.log(`${ts.SyntaxKind.NonNullExpression}: NonNullExpression`)
console.log(`${ts.SyntaxKind.MetaProperty}: MetaProperty`)
console.log(`${ts.SyntaxKind.SyntheticExpression}: SyntheticExpression`)
console.log(`${ts.SyntaxKind.TemplateSpan}: TemplateSpan`)
console.log(`${ts.SyntaxKind.SemicolonClassElement}: SemicolonClassElement`)
console.log(`${ts.SyntaxKind.Block}: Block`)
console.log(`${ts.SyntaxKind.EmptyStatement}: EmptyStatement`)
console.log(`${ts.SyntaxKind.VariableStatement}: VariableStatement`)
console.log(`${ts.SyntaxKind.ExpressionStatement}: ExpressionStatement`)
console.log(`${ts.SyntaxKind.IfStatement}: IfStatement`)
console.log(`${ts.SyntaxKind.DoStatement}: DoStatement`)
console.log(`${ts.SyntaxKind.WhileStatement}: WhileStatement`)
console.log(`${ts.SyntaxKind.ForStatement}: ForStatement`)
console.log(`${ts.SyntaxKind.ForInStatement}: ForInStatement`)
console.log(`${ts.SyntaxKind.ForOfStatement}: ForOfStatement`)
console.log(`${ts.SyntaxKind.ContinueStatement}: ContinueStatement`)
console.log(`${ts.SyntaxKind.BreakStatement}: BreakStatement`)
console.log(`${ts.SyntaxKind.ReturnStatement}: ReturnStatement`)
console.log(`${ts.SyntaxKind.WithStatement}: WithStatement`)
console.log(`${ts.SyntaxKind.SwitchStatement}: SwitchStatement`)
console.log(`${ts.SyntaxKind.LabeledStatement}: LabeledStatement`)
console.log(`${ts.SyntaxKind.ThrowStatement}: ThrowStatement`)
console.log(`${ts.SyntaxKind.TryStatement}: TryStatement`)
console.log(`${ts.SyntaxKind.DebuggerStatement}: DebuggerStatement`)
console.log(`${ts.SyntaxKind.VariableDeclaration}: VariableDeclaration`)
console.log(`${ts.SyntaxKind.VariableDeclarationList}: VariableDeclarationList`)
console.log(`${ts.SyntaxKind.FunctionDeclaration}: FunctionDeclaration`)
console.log(`${ts.SyntaxKind.ClassDeclaration}: ClassDeclaration`)
console.log(`${ts.SyntaxKind.InterfaceDeclaration}: InterfaceDeclaration`)
console.log(`${ts.SyntaxKind.TypeAliasDeclaration}: TypeAliasDeclaration`)
console.log(`${ts.SyntaxKind.EnumDeclaration}: EnumDeclaration`)
console.log(`${ts.SyntaxKind.ModuleDeclaration}: ModuleDeclaration`)
console.log(`${ts.SyntaxKind.ModuleBlock}: ModuleBlock`)
console.log(`${ts.SyntaxKind.CaseBlock}: CaseBlock`)
console.log(`${ts.SyntaxKind.NamespaceExportDeclaration}: NamespaceExportDeclaration`)
console.log(`${ts.SyntaxKind.ImportEqualsDeclaration}: ImportEqualsDeclaration`)
console.log(`${ts.SyntaxKind.ImportDeclaration}: ImportDeclaration`)
console.log(`${ts.SyntaxKind.ImportClause}: ImportClause`)
console.log(`${ts.SyntaxKind.NamespaceImport}: NamespaceImport`)
console.log(`${ts.SyntaxKind.NamedImports}: NamedImports`)
console.log(`${ts.SyntaxKind.ImportSpecifier}: ImportSpecifier`)
console.log(`${ts.SyntaxKind.ExportAssignment}: ExportAssignment`)
console.log(`${ts.SyntaxKind.ExportDeclaration}: ExportDeclaration`)
console.log(`${ts.SyntaxKind.NamedExports}: NamedExports`)
console.log(`${ts.SyntaxKind.NamespaceExport}: NamespaceExport`)
console.log(`${ts.SyntaxKind.ExportSpecifier}: ExportSpecifier`)
console.log(`${ts.SyntaxKind.MissingDeclaration}: MissingDeclaration`)
console.log(`${ts.SyntaxKind.ExternalModuleReference}: ExternalModuleReference`)
console.log(`${ts.SyntaxKind.JsxElement}: JsxElement`)
console.log(`${ts.SyntaxKind.JsxSelfClosingElement}: JsxSelfClosingElement`)
console.log(`${ts.SyntaxKind.JsxOpeningElement}: JsxOpeningElement`)
console.log(`${ts.SyntaxKind.JsxClosingElement}: JsxClosingElement`)
console.log(`${ts.SyntaxKind.JsxFragment}: JsxFragment`)
console.log(`${ts.SyntaxKind.JsxOpeningFragment}: JsxOpeningFragment`)
console.log(`${ts.SyntaxKind.JsxClosingFragment}: JsxClosingFragment`)
console.log(`${ts.SyntaxKind.JsxAttribute}: JsxAttribute`)
console.log(`${ts.SyntaxKind.JsxAttributes}: JsxAttributes`)
console.log(`${ts.SyntaxKind.JsxSpreadAttribute}: JsxSpreadAttribute`)
console.log(`${ts.SyntaxKind.JsxExpression}: JsxExpression`)
console.log(`${ts.SyntaxKind.CaseClause}: CaseClause`)
console.log(`${ts.SyntaxKind.DefaultClause}: DefaultClause`)
console.log(`${ts.SyntaxKind.HeritageClause}: HeritageClause`)
console.log(`${ts.SyntaxKind.CatchClause}: CatchClause`)
console.log(`${ts.SyntaxKind.AssertClause}: AssertClause`)
console.log(`${ts.SyntaxKind.AssertEntry}: AssertEntry`)
console.log(`${ts.SyntaxKind.PropertyAssignment}: PropertyAssignment`)
console.log(`${ts.SyntaxKind.ShorthandPropertyAssignment}: ShorthandPropertyAssignment`)
console.log(`${ts.SyntaxKind.SpreadAssignment}: SpreadAssignment`)
console.log(`${ts.SyntaxKind.EnumMember}: EnumMember`)
console.log(`${ts.SyntaxKind.UnparsedPrologue}: UnparsedPrologue`)
console.log(`${ts.SyntaxKind.UnparsedPrepend}: UnparsedPrepend`)
console.log(`${ts.SyntaxKind.UnparsedText}: UnparsedText`)
console.log(`${ts.SyntaxKind.UnparsedInternalText}: UnparsedInternalText`)
console.log(`${ts.SyntaxKind.UnparsedSyntheticReference}: UnparsedSyntheticReference`)
console.log(`${ts.SyntaxKind.SourceFile}: SourceFile`)
console.log(`${ts.SyntaxKind.Bundle}: Bundle`)
console.log(`${ts.SyntaxKind.UnparsedSource}: UnparsedSource`)
console.log(`${ts.SyntaxKind.InputFiles}: InputFiles`)
console.log(`${ts.SyntaxKind.JSDocTypeExpression}: JSDocTypeExpression`)
console.log(`${ts.SyntaxKind.JSDocNameReference}: JSDocNameReference`)
console.log(`${ts.SyntaxKind.JSDocMemberName}: JSDocMemberName`)
console.log(`${ts.SyntaxKind.JSDocAllType}: JSDocAllType`)
console.log(`${ts.SyntaxKind.JSDocUnknownType}: JSDocUnknownType`)
console.log(`${ts.SyntaxKind.JSDocNullableType}: JSDocNullableType`)
console.log(`${ts.SyntaxKind.JSDocNonNullableType}: JSDocNonNullableType`)
console.log(`${ts.SyntaxKind.JSDocOptionalType}: JSDocOptionalType`)
console.log(`${ts.SyntaxKind.JSDocFunctionType}: JSDocFunctionType`)
console.log(`${ts.SyntaxKind.JSDocVariadicType}: JSDocVariadicType`)
console.log(`${ts.SyntaxKind.JSDocNamepathType}: JSDocNamepathType`)
console.log(`${ts.SyntaxKind.JSDocComment}: JSDocComment`)
console.log(`${ts.SyntaxKind.JSDocText}: JSDocText`)
console.log(`${ts.SyntaxKind.JSDocTypeLiteral}: JSDocTypeLiteral`)
console.log(`${ts.SyntaxKind.JSDocSignature}: JSDocSignature`)
console.log(`${ts.SyntaxKind.JSDocLink}: JSDocLink`)
console.log(`${ts.SyntaxKind.JSDocLinkCode}: JSDocLinkCode`)
console.log(`${ts.SyntaxKind.JSDocLinkPlain}: JSDocLinkPlain`)
console.log(`${ts.SyntaxKind.JSDocTag}: JSDocTag`)
console.log(`${ts.SyntaxKind.JSDocAugmentsTag}: JSDocAugmentsTag`)
console.log(`${ts.SyntaxKind.JSDocImplementsTag}: JSDocImplementsTag`)
console.log(`${ts.SyntaxKind.JSDocAuthorTag}: JSDocAuthorTag`)
console.log(`${ts.SyntaxKind.JSDocDeprecatedTag}: JSDocDeprecatedTag`)
console.log(`${ts.SyntaxKind.JSDocClassTag}: JSDocClassTag`)
console.log(`${ts.SyntaxKind.JSDocPublicTag}: JSDocPublicTag`)
console.log(`${ts.SyntaxKind.JSDocPrivateTag}: JSDocPrivateTag`)
console.log(`${ts.SyntaxKind.JSDocProtectedTag}: JSDocProtectedTag`)
console.log(`${ts.SyntaxKind.JSDocReadonlyTag}: JSDocReadonlyTag`)
console.log(`${ts.SyntaxKind.JSDocOverrideTag}: JSDocOverrideTag`)
console.log(`${ts.SyntaxKind.JSDocCallbackTag}: JSDocCallbackTag`)
console.log(`${ts.SyntaxKind.JSDocEnumTag}: JSDocEnumTag`)
console.log(`${ts.SyntaxKind.JSDocParameterTag}: JSDocParameterTag`)
console.log(`${ts.SyntaxKind.JSDocReturnTag}: JSDocReturnTag`)
console.log(`${ts.SyntaxKind.JSDocThisTag}: JSDocThisTag`)
console.log(`${ts.SyntaxKind.JSDocTypeTag}: JSDocTypeTag`)
console.log(`${ts.SyntaxKind.JSDocTemplateTag}: JSDocTemplateTag`)
console.log(`${ts.SyntaxKind.JSDocTypedefTag}: JSDocTypedefTag`)
console.log(`${ts.SyntaxKind.JSDocSeeTag}: JSDocSeeTag`)
console.log(`${ts.SyntaxKind.JSDocPropertyTag}: JSDocPropertyTag`)
console.log(`${ts.SyntaxKind.SyntaxList}: SyntaxList`)
console.log(`${ts.SyntaxKind.NotEmittedStatement}: NotEmittedStatement`)
console.log(`${ts.SyntaxKind.PartiallyEmittedExpression}: PartiallyEmittedExpression`)
console.log(`${ts.SyntaxKind.CommaListExpression}: CommaListExpression`)
console.log(`${ts.SyntaxKind.MergeDeclarationMarker}: MergeDeclarationMarker`)
console.log(`${ts.SyntaxKind.EndOfDeclarationMarker}: EndOfDeclarationMarker`)
console.log(`${ts.SyntaxKind.SyntheticReferenceExpression}: SyntheticReferenceExpression`)
console.log(`${ts.SyntaxKind.Count}: Count`)
console.log(`${ts.SyntaxKind.FirstAssignment}: FirstAssignment`)
console.log(`${ts.SyntaxKind.LastAssignment}: LastAssignment`)
console.log(`${ts.SyntaxKind.FirstCompoundAssignment}: FirstCompoundAssignment`)
console.log(`${ts.SyntaxKind.LastCompoundAssignment}: LastCompoundAssignment`)
console.log(`${ts.SyntaxKind.FirstReservedWord}: FirstReservedWord`)
console.log(`${ts.SyntaxKind.LastReservedWord}: LastReservedWord`)
console.log(`${ts.SyntaxKind.FirstKeyword}: FirstKeyword`)
console.log(`${ts.SyntaxKind.LastKeyword}: LastKeyword`)
console.log(`${ts.SyntaxKind.FirstFutureReservedWord}: FirstFutureReservedWord`)
console.log(`${ts.SyntaxKind.LastFutureReservedWord}: LastFutureReservedWord`)
console.log(`${ts.SyntaxKind.FirstTypeNode}: FirstTypeNode`)
console.log(`${ts.SyntaxKind.LastTypeNode}: LastTypeNode`)
console.log(`${ts.SyntaxKind.FirstPunctuation}: FirstPunctuation`)
console.log(`${ts.SyntaxKind.LastPunctuation}: LastPunctuation`)
console.log(`${ts.SyntaxKind.FirstToken}: FirstToken`)
console.log(`${ts.SyntaxKind.LastToken}: LastToken`)
console.log(`${ts.SyntaxKind.FirstTriviaToken}: FirstTriviaToken`)
console.log(`${ts.SyntaxKind.LastTriviaToken}: LastTriviaToken`)
console.log(`${ts.SyntaxKind.FirstLiteralToken}: FirstLiteralToken`)
console.log(`${ts.SyntaxKind.LastLiteralToken}: LastLiteralToken`)
console.log(`${ts.SyntaxKind.FirstTemplateToken}: FirstTemplateToken`)
console.log(`${ts.SyntaxKind.LastTemplateToken}: LastTemplateToken`)
console.log(`${ts.SyntaxKind.FirstBinaryOperator}: FirstBinaryOperator`)
console.log(`${ts.SyntaxKind.LastBinaryOperator}: LastBinaryOperator`)
console.log(`${ts.SyntaxKind.FirstStatement}: FirstStatement`)
console.log(`${ts.SyntaxKind.LastStatement}: LastStatement`)
console.log(`${ts.SyntaxKind.FirstNode}: FirstNode`)
console.log(`${ts.SyntaxKind.FirstJSDocNode}: FirstJSDocNode`)
console.log(`${ts.SyntaxKind.LastJSDocNode}: LastJSDocNode`)
console.log(`${ts.SyntaxKind.FirstJSDocTagNode}: FirstJSDocTagNode`)
console.log(`${ts.SyntaxKind.LastJSDocTagNode}: LastJSDocTagNode`)
